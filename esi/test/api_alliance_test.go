/*
EVE Stellar Information (ESI) - tranquility

Testing AllianceAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package esi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/AlHeamer/openesi/esi"
)

func Test_esi_AllianceAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AllianceAPIService GetAlliances", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AllianceAPI.GetAlliances(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AllianceAPIService GetAlliancesAllianceId", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var allianceId int64

		resp, httpRes, err := apiClient.AllianceAPI.GetAlliancesAllianceId(context.Background(), allianceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AllianceAPIService GetAlliancesAllianceIdCorporations", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var allianceId int64

		resp, httpRes, err := apiClient.AllianceAPI.GetAlliancesAllianceIdCorporations(context.Background(), allianceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AllianceAPIService GetAlliancesAllianceIdIcons", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var allianceId int64

		resp, httpRes, err := apiClient.AllianceAPI.GetAlliancesAllianceIdIcons(context.Background(), allianceId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
